{"version":3,"file":"timeline.js","sourceRoot":"","sources":["timeline.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, PropertyValues } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { style } from './timeline.css.js';\nimport '../timeline-view/timeline-view.js';\nimport '../notetray/notetray.js';\nimport { MIDIFile } from '../utils';\nimport { MIDITrack } from '../utils';\nimport { TimelineView } from '../timeline-view';\n\n@customElement('ms-timeline')\nexport class Timeline extends LitElement {\n    static TOP_GUTTER = 15;\n\n    static styles = style;\n\n    @query('ms-timeline-view')\n    timelineView?: TimelineView;\n\n    @property({ type: String })\n    src = '';\n\n    @property({ type: Number })\n    trackNum = 0;\n\n    @property({ type: Number })\n    currentTime = 0;\n\n    @property({ type: Number })\n    pixelsPerBeat = 20;\n\n    bounds?: DOMRect;\n    midi?: MIDIFile;\n    protected _midiTrack?: MIDITrack;\n\n    set midiTrack(track: MIDITrack | undefined) {\n        if (this._midiTrack?.uuid === track?.uuid) {\n            return;\n        }\n        this._midiTrack = track;\n        if (this.timelineView) {\n            this.timelineView.sequence = this._midiTrack?.sequence || [];\n        }\n        this.requestUpdate();\n    }\n\n    get midiTrack() {\n        return this._midiTrack;\n    }\n\n    get track() {\n        return this.midiTrack;\n    }\n\n    get contentWidth() {\n        this.bounds = this.getBoundingClientRect();\n        return Math.max((this.bounds?.width || 0) - 50, 0);\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.bounds = this.getBoundingClientRect();\n    }\n\n    protected firstUpdated(_changedProperties: PropertyValues) {\n        super.firstUpdated(_changedProperties);\n        if (this.timelineView) {\n            this.timelineView.sequence = this._midiTrack?.sequence || [];\n        }\n\n    }\n\n    render() {\n        const noteMin = this.midiTrack?.noteRange[0] || 0;\n        const noteMax = this.midiTrack?.noteRange[1] || 0;\n        const noteRange = noteMax - noteMin + 2\n        const noteHeight = Math.ceil(((this.bounds?.height || 0) - Timeline.TOP_GUTTER) / noteRange);\n        return html`\n            <ms-note-tray \n                noteheight=${noteHeight}\n                notemin=${noteMin}\n                notemax=${noteMax}>\n            </ms-note-tray>\n            <ms-timeline-view style=\"height: ${this.bounds?.height}px\"\n                noteheight=${noteHeight}\n                notemin=${noteMin}\n                notemax=${noteMax}\n                currenttime=${this.currentTime}\n                pixelsperbeat=${this.pixelsPerBeat}\n                numbeats=${this.midiTrack?.duration}\n                beatspermeasure=${this.midiTrack?.timeSignature?.numerator}>\n            </ms-timeline-view>`;\n    }\n\n\n    protected async load(uri: string) {\n        this.midi = await MIDIFile.Load(uri);\n        this.midiTrack = this.midi.tracks[this.trackNum];\n        if (this.timelineView) {\n            this.timelineView.sequence = this.midiTrack?.sequence || [];\n        }\n        this.requestUpdate();\n    }\n\n    attributeChangedCallback(name: string, _old: string | null, value: string | null) {\n        super.attributeChangedCallback(name, _old, value);\n        if (name === 'src' && value) {\n            this.load(value);\n        }\n        if (name === 'trackNum' && value && this.midi) {\n            this.midiTrack = this.midi.tracks[parseInt(value)];\n        }\n    }\n}"]}